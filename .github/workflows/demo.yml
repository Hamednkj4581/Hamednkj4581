name: macOS Screenshot

on:
  push:
    paths:
      - '.github/workflows/demo.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # runs-on: macos-13
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write to frpc.toml
        shell: bash
        run: |
          brew install displayplacer
          
          displays=$(displayplacer list)
          echo "$displays"

          # 提取 Persistent screen id
          display_id=$(echo "$displays" | grep -o 'Persistent screen id: [^ ]*' | awk '{print $4}' | head -n 1)

          if [ -n "$display_id" ]; then
            echo "当前显示器 ID: $display_id"
            displayplacer "id:$display_id res:1920x1080"
          else
            echo "未找到显示器 ID"
          fi

          cat << EOF > frpc.toml
          user = "mac-mini"

          serverAddr = "165.154.244.104"
          serverPort = 7000
          loginFailExit = true

          auth.method = "token"
          auth.token = "2f1d3a0e-9b64-4b91-b76b-8cb4a2f2e5d3"

          webServer.addr = "127.0.0.1"
          webServer.port = 7400
          webServer.user = "admin"
          webServer.password = "admin"

          [[proxies]]
          name = "vnc"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5900
          remotePort = 5900
          EOF

          sudo sysadminctl -addUser newuser -password password
          sudo dscl . -append /Groups/admin GroupMembership newuser
          dscl . -read /Groups/admin GroupMembership

          mkdir -p images

          brew install cliclick
          cliclick p
          
          cliclick c:27,13
          sleep 1

          echo 系统设置
          cliclick c:47,75
          sleep 2
          
          echo 输入区域
          cliclick c:600,230
          sleep 1
          screencapture -C -x images/screenshot_1.png
          cliclick t:"Screen Sharing"
          sleep 5
          screencapture -C -x images/screenshot_2.png
          exit 1

          echo 共享
          cliclick c:680,268
          sleep 2

          echo 开启
          cliclick c:1128,380
          sleep 2

          echo 关闭
          cliclick c:517,190

          # brew install socat
          # socat TCP-LISTEN:1234,fork TCP:127.0.0.1:5900 &
          
          ./frpc -c frpc.toml &
          
          # sleep 5
          # curl -u admin:admin http://127.0.0.1:7400/api/status

          # sudo chown -R newuser /opt/homebrew
          # sudo chmod -R u+w /opt/homebrew

          brew install tesseract

          echo 等待授权

          recognize_and_click() {
            local left=$1
            local top=$2
            local width=$3
            local height=$4
            local target_text=$5
            local max_wait_time=${6:-30}  # 默认最大等待时间为30秒

            for ((i=1; i<=max_wait_time; i++)); do
              echo "截图 $i"
              screencapture -C -x -R${left},${top},${width},${height} images/screenshot.png

              # 使用tesseract识别截图中的文字
              recognized_text=$(tesseract images/screenshot.png -)

              # 如果识别到目标文本，模拟点击区域中心
              local center_x=$((left + width / 2))
              local center_y=$((top + height / 2))

              if [[ "$recognized_text" == *"$target_text"* ]]; then
                echo "识别到目标文本 '$target_text'，正在点击..."
                cliclick c:$(($center_x)),$(($center_y))
                return 0
              fi

              sleep 1
              echo "未识别到目标文本 '$target_text'，已等待 $i 秒..."
            done

            echo "未在 $max_wait_time 秒内识别到目标文本 '$target_text'，退出。"
            return 1
          }

          recognize_and_click 847 430 226 26 "Allow"
          
          for i in {1..30}; do
            echo "截图 $i"
            screencapture -C -x images/screenshot_$i.png
            tesseract images/screenshot_$i.png -
            sleep 1
          done
          
          echo Share Screen
          cliclick c:1017,447
          echo Allow
          sleep 2
          cliclick c:960,443

      - name: 上传
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshot
          path: images/*

      - name: 等待
        run: |
          # sleep 1
          sleep 14400

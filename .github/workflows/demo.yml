name: macOS Screenshot

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write to frpc.toml
        shell: bash
        run: |
          cat << EOF > frpc.toml
          user = "mac-mini"

          serverAddr = "165.154.244.104"
          serverPort = 7000
          loginFailExit = true

          auth.method = "token"
          auth.token = "2f1d3a0e-9b64-4b91-b76b-8cb4a2f2e5d3"

          webServer.addr = "0.0.0.0"
          webServer.port = 7400
          webServer.user = "admin"
          webServer.password = "admin"

          [[proxies]]
          name = "vnc"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5900
          remotePort = 5900

          # [[proxies]]
          # name = "ssh"
          # type = "tcp"
          # localIP = "127.0.0.1"
          # localPort = 1234
          # remotePort = 5901
          EOF

          sudo sysadminctl -addUser newuser -password password
          sudo dscl . -append /Groups/admin GroupMembership newuser
          dscl . -read /Groups/admin GroupMembership
          # dscl . -list /Users | grep -v '^_'

          ipconfig getifaddr en0

          # cd /Users/runner/Desktop
          # touch 111.txt
          # ls
          # cd -

          sudo systemsetup -getremotelogin

          brew install cliclick
          cliclick p
          cliclick c:20,10
          sleep 2
          cliclick c:60,75
          sleep 2
          cliclick c:250,120
          sleep 1
          cliclick t:"Screen Sharing"

          sleep 3
          cliclick c:250,270

          sleep 2
          cliclick c:700,170

          sleep 2
          screencapture -C -x /tmp/screenshot_1.png
          echo 开启成功

          # brew install socat
          # socat TCP-LISTEN:1234,fork TCP:127.0.0.1:22 &
          # socat TCP-LISTEN:1234,fork TCP:127.0.0.1:5900 &
          
          ./frpc -c frpc.toml &
          sleep 5

          curl ipinfo.io
          curl -u admin:admin http://127.0.0.1:7400/api/status

          # sudo chown -R newuser /opt/homebrew
          # sudo chmod -R u+w /opt/homebrew

          echo 等待授权
          sleep 30
          cliclick c:510,365
          sleep 2
          cliclick c:560,365

          brew install displayplacer
          # displayplacer "id:<screen_id> res:1920x1080"

          # 获取所有屏幕信息并解析分辨率
          screen_info=$(displayplacer list)
          echo $screen_info

          # 提取分辨率和屏幕 ID
          max_resolution="0x0"
          max_resolution_screen_id=""
          max_width=0
          max_height=0

          while IFS= read -r line; do
              # 获取分辨率（假设格式是 res:宽度x高度）
              if [[ $line =~ res:([0-9]+)x([0-9]+) ]]; then
                  width=${BASH_REMATCH[1]}
                  height=${BASH_REMATCH[2]}
                  screen_id=$(echo $line | grep -o 'id:[^ ]*' | cut -d: -f2)

                  # 计算分辨率，并比较最大的
                  resolution=$((width * height))
                  if [ $resolution -gt $((max_width * max_height)) ]; then
                      max_width=$width
                      max_height=$height
                      max_resolution=$line
                      max_resolution_screen_id=$screen_id
                  fi
              fi
          done <<< "$screen_info"

          # 输出最大分辨率和对应的屏幕 ID
          echo "最大分辨率: ${max_width}x${max_height}, 屏幕 ID: ${max_resolution_screen_id}"

          # 设置为最大分辨率
          target_resolution="${max_width}x${max_height}"

          # 修改最大屏幕的分辨率
          displayplacer "id:$max_resolution_screen_id res:$target_resolution"

          echo "已将最大分辨率的屏幕设置为 $target_resolution"

      - name: 截屏
        run: |
          screencapture -C -x /tmp/screenshot_2.png

      - name: 上传
        uses: actions/upload-artifact@v4
        with:
          name: screenshot
          path: /tmp/screenshot_*.png

      - name: 等待
        run: |
          # sleep 1
          sleep 3600
